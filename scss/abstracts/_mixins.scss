@use "./variables" as *;
// Flex
@mixin flex($position, $justify, $direction) {
  display: flex;
  align-items: $position;
  justify-content: $justify;
  flex-direction: $direction;
}
// Overflow
@mixin overflow() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
// Button
@mixin buttongradient {
  border: 0;
  padding: 1.2rem;
  font-weight: 500;
  font-size: 1.1rem;
  border-radius: 2rem;
  background-color: $darkgray;
  background-image: linear-gradient(
    0deg,
    rgba(147, 86, 220, 0.9),
    rgba(255, 121, 218, 0.9)
  );
  cursor: pointer;
  transition-duration: 0.25s;
  box-shadow: 0.25rem 0.25rem 10px rgb(0 0 0 / 25%);
  &:hover {
    background-color: #fff;
    box-shadow: 0.25rem 0.25rem 10px rgb(0 0 0 / 50%);
  }
  & a {
    text-decoration: none;
    color: $white;
    font-weight: 400;
  }
}

// Responsive
/// Responsive breakpoint manager
/// @access public
/// @param {String} $breakpoint - Breakpoint
/// @requires $breakpoints
@mixin respond-to($breakpoint) {
  $raw-query: map-get($breakpoints, $breakpoint);

  @if $raw-query {
    $query: if(
      type-of($raw-query) == "string",
      unquote($raw-query),
      inspect($raw-query)
    );

    @media #{$query} {
      @content;
    }
  } @else {
    @error 'No value found for `#{$breakpoint}`. '
         + 'Please make sure it is defined in `$breakpoints` map.';
  }
}
